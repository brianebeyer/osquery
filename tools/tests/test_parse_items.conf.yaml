---
# this file is a YAMLized version of test_parse_items.conf with
# _YAML and addition of dictionary->foo2 and dictionary->foo3.
options:
  enable_monitor: 'true'
# this is a comment because they are legally supported in YAML
list:
- a_YAML
dictionary:
  foo: bar_YAML
  foo2: "bar2_YAML"
  foo3: &foo3 bar3_YAML
  foo3_2: *foo3
  foo4: &foo4
    hi: hival
    ho: hoval
  foo4_2: *foo4

  foo_int: 142
  foo_quoted_int_so_string: "142"
  foo_int_hex: 0xf7
  foo_int_octal: 0o12
  foo_float: 142.5
  foo_quoted_float_so_string: "142.5"
  foo_fake_int: 142asdasd
  foo_fake_int2: asdasd142
  foo_fake_float: 142.5asdasd
  foo_fake_float2: asdasd142.5
  foo_bool_true:
  - true
  - True
  - TRUE
  foo_bool_false:
  - false
  - False
  - FALSE
  foo_null:
  - ~
  - null
  - Null
  - NULL

packs:
  foobar:
    version: 1.5.0
    queries:
      kernel_modules:
        query: select * from kernel_modules;
        interval: 3600
  foobar_with_files:
    file_paths:
      logs:
      - "/dev/random"
    file_accesses:
    - logs
    - bar
schedule:
  launchd:
    query: select * from launchd;
    interval: 3600
file_paths:
  logs:
  - "/dev/null"
  config_files:
  - "/dev"
  - "/dev/zero"
file_accesses:
- logs
events:
  environment_variables:
  - foo
  - bar
decorators:
  load:
  - select version from osquery_info
  - select uuid as hostuuid from system_info
  - select 'test' as load_test
  always:
  - select user as username from logged_in_users where user <> '' order by time limit 1;
  - select 'test' as always_test
  interval:
    '60':
    - select 1 as one from time
    - select 'test' as internal_60_test
    '61':
    - select 'invalid' as invalid_interval_test
views:
  kernel_hashes: select hash.path as kernel_binary, version, hash.sha256 as sha256,
    hash.sha1 as sha1, hash.md5 as md5 from (select path || '/Contents/MacOS/' as
    directory, name, version from kernel_extensions) join hash using (directory)
